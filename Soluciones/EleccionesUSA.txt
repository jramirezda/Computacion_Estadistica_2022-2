setwd("C:/Nano/Docencia/ComputacionEstadistica")
library(readxl)
library(stringr)
library(sqldf)
library(dplyr)

##############################################################################################################
############################################### Preguntas 1,2,3 ##############################################
##############################################################################################################
states <- data.frame(read_excel("states.xlsx"))
str(states)
head(states)
perdidos <- function(x) return(sum(is.na(x)))
apply(states,2,perdidos)

counties <- data.frame(read_excel("counties.xlsx"))
str(counties)
head(counties)
apply(counties,2,perdidos)
subset(counties,apply(counties,1,perdidos) > 0)

elections <- data.frame(read_excel("elections.xlsx"))
str(elections)
head(elections)
apply(elections,2,perdidos)

##############################################################################################################
################################################# Pregunta 4 #################################################			 
##############################################################################################################

###################### Solución 1 ######################
sqldf("select codecounty
	   from counties
	   group by codecounty
	   having count(*) > 1")

sqldf("select codestate
	   from states
	   group by codestate
	   having count(*) > 1")

###################### Solución 2 ######################
counties %>%
group_by(codecounty) %>%
summarise(veces=n()) %>%
filter(veces > 1)

states %>%
group_by(codestate) %>%
summarise(veces=n()) %>%
filter(veces > 1)

##############################################################################################################
################################################# Pregunta 5 #################################################			
##############################################################################################################
limpiar <- function(x){
		   x <- str_replace_all(str_to_lower(x),"[^a-záéíóúüñ ]","")
		   x <- str_to_title(str_squish(x))
		   return(x)
}		   
counties <- within(counties,county <- limpiar(county))
head(counties,20)

states <- within(states,{
						 state <- limpiar(state)
						 region <- limpiar(region)
						}) 
head(states,20)

##############################################################################################################
##############################################################################################################
##############################################################################################################
counties2 <- sqldf("select counties.*, state, region
                    from counties left join states on (counties.codestate=states.codestate)")

elections2 <- sqldf("select elections.*, county, codestate
					 from elections left join counties on
					 (elections.codecounty=counties.codecounty)")

elections3 <- sqldf("select elections2.*, state, region
					 from elections2 left join states on
					 (elections2.codestate=states.codestate)")
##############################################################################################################
##############################################################################################################
##############################################################################################################

##############################################################################################################
################################################# Pregunta 6 #################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
limites_a <- sqldf("select codestate, lower_quartile(population) as p25,
									  upper_quartile(population) as p75
					from counties
					group by codestate
					having count(*) >= 3")
counties_a <- sqldf("select counties.*, case when population <= p25 then 'low'
                                             when population >  p75 then 'high'
											 when p25 is null or p75 is null then ''
											 else 'mid'
										end as populationC
					 from counties left join limites_a on (counties.codestate=limites_a.codestate)")					
})

###################### Solución 2 ######################
system.time({
limites_b <- counties %>%
             group_by(codestate) %>%
             summarise(ncounties=n(),p25=quantile(population,0.25,na.rm=TRUE,type=2),
		                             p75=quantile(population,0.75,na.rm=TRUE,type=2)) %>%
		     filter(ncounties >= 3)
counties_b <- counties %>% 
              left_join(limites_b,by="codestate") %>% 
              mutate(populationC=case_when(population <= p25 ~ "low",
			                               population  > p75 ~ "high",
										   is.na(p25) & is.na(p75) ~ "",
										   TRUE ~ "mid")) %>%
			  select(everything(counties),populationC) %>% as.data.frame()
})
			  
all.equal(counties_a,counties_b)
str(counties_a)

##############################################################################################################
################################################# Pregunta 7 #################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
repetidos_a <- sqldf("select county
			          from counties
					  group by county
					  having count(*) > 1")
a7 <- sqldf("select county, codecounty, state, codestate, region 
             from counties2
			 where county in (select county from repetidos_a)
			 order by county, codecounty, state, codestate, region")
})

###################### Solución 2 ######################
system.time({
repetidos_b <- counties %>%
               group_by(county) %>%
			   summarise(veces=n()) %>%
			   filter(veces > 1)
A7 <- counties2 %>%
      filter(county %in% repetidos_b$county) %>%
	  arrange(county,codecounty,state,codestate,region) %>%
	  select(county,codecounty,state,codestate,region) %>% as.data.frame()
})

all.equal(a7,A7)
str(a7)
##############################################################################################################
################################################# Pregunta 8 #################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
a8 <- sqldf("select region, codestate, state, codecounty, county
			 from elections3
			 group by region, codestate, state, codecounty, county
			 having count(*)=5 and min(republic-democrat) > 0")
})

###################### Solución 2 ######################
system.time({
A8 <- elections3 %>%
      group_by(region,codestate,state,codecounty,county) %>%
	  summarise(veces=n(),delta=min(republic-democrat)) %>%
	  filter(veces==5 & delta > 0) %>% select(-c(veces,delta)) %>% as.data.frame() 
})
	  
all.equal(a8,A8)
str(a8)

##############################################################################################################
################################################# Pregunta 9 #################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
a9 <- sqldf("select region, codestate, state
			 from elections3
			 where year=2000
			 group by region, codestate, state
			 having lower_quartile(republic-democrat) > 0")
})

###################### Solución 2 ######################
system.time({
A9 <- elections3 %>%
	  filter(year==2000) %>%
      group_by(region,codestate,state) %>%
	  summarise(delta=quantile(republic-democrat,0.25,type=2)) %>%
	  filter(delta > 0) %>% select(-delta) %>% as.data.frame() 
})
	  
all.equal(a9,A9)
str(a9)

##############################################################################################################
################################################# Pregunta 10 #################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
a10 <- sqldf("select *
 			  from counties
			  where codecounty not in (select distinct codecounty
			                           from elections3)
			  order by codestate, codecounty, county")
})

###################### Solución 2 ######################
system.time({
A10 <- counties %>%
       filter(!(codecounty %in% with(elections3,unique(codecounty)))) %>%
	   arrange(codestate,codecounty,county) %>% as.data.frame()
})

all.equal(a10,A10)
str(a10)

##############################################################################################################
################################################# Pregunta 11 ################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
a11 <- sqldf("select region, codestate, state, codecounty, county, count(*) as veces
              from elections3
		      group by region, codestate, state, codecounty, county
			  having veces < 5")
})

###################### Solución 2 ######################
system.time({			  
A11 <- elections3 %>%
	   group_by(region,codestate,state,codecounty,county) %>%
	   summarise(veces=n()) %>%
	   filter(veces < 5) %>% as.data.frame()
})

all.equal(a11,A11)
str(a11)

##############################################################################################################
################################################# Pregunta 12 ################################################			 
##############################################################################################################

###################### Solución 1 ######################
system.time({
states10_a <- sqldf("select codestate
			         from counties
					 group by codestate
					 having sum(population) > 10000000")
a12 <- sqldf("select year
              from elections3
			  where codestate in (select codestate from states10_a)
		      group by year
			  having sum(democrat) > sum(republic) and sum(democrat) > sum(other)")
})

###################### Solución 2 ######################
system.time({
states10_b <- counties %>% group_by(codestate) %>% summarise(pop=sum(population)) %>%
              filter(pop > 10000000)			  
A12 <- elections3 %>%
       filter(codestate %in% with(states10_b,codestate)) %>%
	   group_by(year) %>%
	   summarise(tot1=sum(democrat),tot2=sum(republic),tot3=sum(other))	%>%
	   filter(tot1 > tot2 & tot1 > tot3) %>% select(year) %>% as.data.frame()
})

all.equal(a12,A12)
str(a12)
